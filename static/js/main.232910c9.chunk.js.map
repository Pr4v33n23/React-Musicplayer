{"version":3,"sources":["components/Player.tsx","components/Song.tsx","data/data.tsx","components/LibrarySong.tsx","components/Library.tsx","components/Nav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Player","currentSong","isPlaying","setIsPlaying","songs","audioRef","setCurrentSong","setSongs","useState","currentTime","duration","songInfo","setSongInfo","useEffect","newSongs","map","song","id","active","getTime","time","Math","floor","slice","timeUpdateHandler","e","current","target","skipTrackerHanlder","direction","currentIndex","findIndex","length","playPromise","play","undefined","then","audio","className","min","max","value","onChange","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","onTimeUpdate","onLoadedMetadata","ref","src","Song","alt","name","cover","artist","chillHop","color","uuidv4","LibrarySong","Library","libraryStatus","Nav","setLibraryStatus","faMusic","App","useRef","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.232910c9.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { MutableRefObject, useEffect, useRef, useState } from \"react\";\r\n\r\nexport interface Props {\r\n  currentSong: {\r\n    name: string;\r\n    cover: string;\r\n    artist: string;\r\n    audio: string;\r\n    color: string[];\r\n    id: string;\r\n    active: boolean;\r\n  };\r\n  isPlaying: boolean;\r\n  setIsPlaying: Function;\r\n  setCurrentSong: Function;\r\n  songs: Array<{\r\n    name: string;\r\n    cover: string;\r\n    artist: string;\r\n    audio: string;\r\n    color: string[];\r\n    id: string;\r\n    active: boolean;\r\n  }>;\r\n  audioRef: MutableRefObject<HTMLAudioElement>;\r\n  setSongs: Function;\r\n}\r\n\r\nconst Player: React.FC<Props> = ({\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  songs,\r\n  audioRef,\r\n  setCurrentSong,\r\n  setSongs,\r\n}) => {\r\n  const [songInfo, setSongInfo] = useState({\r\n    currentTime: 0,\r\n    duration: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === currentSong.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n\r\n    setSongs(newSongs);\r\n  }, [currentSong, setSongs, songs]);\r\n\r\n  const playSongHandler = (): void => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const getTime = (time: number) => {\r\n    return `${Math.floor(time / 60)}:${(\"0\" + Math.floor(time % 60)).slice(\r\n      -2\r\n    )}`;\r\n  };\r\n\r\n  const timeUpdateHandler = (e: any): void => {\r\n    const current = e.target.currentTime;\r\n    const duration = e.target.duration;\r\n\r\n    setSongInfo({ ...songInfo, currentTime: current, duration: duration });\r\n  };\r\n\r\n  const dragHandler = (e: { target: { value: any } }) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const skipTrackerHanlder = (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n      setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n\r\n    if (direction === \"skip-back\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        setCurrentSong(songs[songs.length - 1]);\r\n        if (isPlaying) {\r\n          const playPromise = audioRef.current.play();\r\n          if (playPromise !== undefined) {\r\n            playPromise.then((audio) => {\r\n              audioRef.current.play();\r\n            });\r\n          }\r\n        }\r\n        return;\r\n      }\r\n      setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n\r\n    if (isPlaying) {\r\n      const playPromise = audioRef.current.play();\r\n      if (playPromise !== undefined) {\r\n        playPromise.then((audio) => {\r\n          audioRef.current.play();\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{ getTime(songInfo.currentTime)}</p>\r\n        <input\r\n          min={0}\r\n          max={songInfo.duration}\r\n          value={songInfo.currentTime || 0}\r\n          onChange={dragHandler}\r\n          type=\"range\"\r\n        ></input>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackerHanlder(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          size=\"1x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"1x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          className=\"skip-forward\"\r\n          size=\"1x\"\r\n          icon={faAngleRight}\r\n          onClick={() => skipTrackerHanlder(\"skip-forward\")}\r\n        />\r\n      </div>\r\n      <audio\r\n        onTimeUpdate={timeUpdateHandler}\r\n        onLoadedMetadata={timeUpdateHandler}\r\n        ref={audioRef}\r\n        src={currentSong.audio}\r\n      ></audio>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import * as React from \"react\";\r\n\r\nexport interface Props {\r\n  currentSong: {\r\n    name: string;\r\n    cover: string;\r\n    artist: string;\r\n    audio: string;\r\n    color: string[];\r\n    id: string;\r\n    active: boolean;\r\n  };\r\n}\r\n\r\nconst Song: React.FC<Props> = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img alt={currentSong.name} src={currentSong.cover}></img>\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"yyyyyyyyyyyyyyy\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"xxxxxxxx\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default chillHop;\r\n","import * as React from \"react\";\r\nimport { MutableRefObject } from \"react\";\r\n\r\nexport interface Props {\r\n  song: {\r\n    name: string;\r\n    cover: string;\r\n    artist: string;\r\n    audio: string;\r\n    color: string[];\r\n    id: string;\r\n    active: boolean;\r\n  };\r\n  songs: Array<{\r\n    name: string;\r\n    cover: string;\r\n    artist: string;\r\n    audio: string;\r\n    color: string[];\r\n    id: string;\r\n    active: boolean;\r\n  }>;\r\n  setCurrentSong: Function;\r\n  audioRef: MutableRefObject<HTMLAudioElement>;\r\n  isPlaying: boolean;\r\n  setSongs: Function;\r\n  id: string;\r\n}\r\n\r\nconst LibrarySong: React.FC<Props> = ({\r\n  song,\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  id,\r\n}) => {\r\n  const songSelectHandler = () => {\r\n    const newSongs = songs.map((currentSong) => {\r\n      if (currentSong.id === id) {\r\n        return {\r\n          ...currentSong,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...currentSong,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n\r\n    setSongs(newSongs);\r\n\r\n    setCurrentSong(song);\r\n    if (isPlaying) {\r\n      const playPromise = audioRef.current.play();\r\n      if (playPromise !== undefined) {\r\n        playPromise.then((audio) => {\r\n          audioRef.current.play();\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img alt={song.name} src={song.cover}></img>\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import * as React from \"react\";\r\nimport { MutableRefObject } from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nexport interface Props {\r\n  songs: Array<{\r\n    name: string;\r\n    cover: string;\r\n    artist: string;\r\n    audio: string;\r\n    color: string[];\r\n    id: string;\r\n    active: boolean;\r\n  }>;\r\n  setCurrentSong: Function;\r\n  audioRef: MutableRefObject<HTMLAudioElement>;\r\n  isPlaying: boolean;\r\n  setSongs: Function;\r\n  libraryStatus: boolean;\r\n}\r\n\r\nconst Library: React.FC<Props> = ({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  libraryStatus,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            song={song}\r\n            songs={songs}\r\n            setCurrentSong={setCurrentSong}\r\n            id={song.id}\r\n            key={song.name}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport interface Props {\r\n    libraryStatus: boolean;\r\n    setLibraryStatus: Function;\r\n}\r\n\r\nconst Nav: React.FC<Props> = ({libraryStatus, setLibraryStatus}) => {\r\n  return (\r\n    <nav>\r\n      <h1>Waves</h1>\r\n      <button onClick = { () => setLibraryStatus(!libraryStatus)}>\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState } from \"react\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport \"./styles/app.scss\";\nimport data from \"./data/data\";\nimport Library from \"./components/Library\";\nimport { useRef } from \"react\";\nimport { MutableRefObject } from \"react\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  const audioRef = useRef() as MutableRefObject<HTMLAudioElement>;\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        setIsPlaying={setIsPlaying}\n        isPlaying={isPlaying}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        songs={songs}\n        audioRef={audioRef}\n        setSongs={setSongs}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}